// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  // login      String
  profile    Int
  password   String?
  first_name String?
  last_name  String?
  email      String      @unique
  cpf        Int?        @unique
  idGoogle   String?     @unique
  picture    String?
  zipcode    String?
  address    String?
  number     String?
  city       String?
  reference  String?
  state      String?
  status     Boolean     @default(true)
  created_at DateTime    @default(now())
  updated_at DateTime?
  UserStore  UserStore[]
  Cart       Cart[]

  // ProductCategory ProductCategory[]
  @@map("users")
}

model Store {
  id         Int         @id @default(autoincrement())
  name       String
  picture    String?
  zipcode    String?
  address    String?
  number     String?
  city       String?
  reference  String?
  state      String?
  status     Boolean     @default(true)
  created_at DateTime    @default(now())
  updated_at DateTime?
  // ProductCategory ProductCategory[]
  UserStore  UserStore[]
  Product    Product[]

  @@map("stores")
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  // bar_code        String?           @unique
  price           Decimal
  stock           Int
  id_store        Int
  picture0        String
  picture1        String?
  picture2        String?
  picture3        String?
  picture4        String?
  picture5        String?
  picture6        String?
  picture7        String?
  picture8        String?
  status          Boolean           @default(true)
  created_at      DateTime          @default(now())
  updated_at      DateTime?
  ProductCategory ProductCategory[]
  store_product   Store             @relation(fields: [id_store], references: [id])
  Cart            Cart[]

  @@map("products")
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String
  status          Boolean           @default(true)
  created_at      DateTime          @default(now())
  updated_at      DateTime?
  ProductCategory ProductCategory[]

  @@map("categories")
}

model UserStore {
  id       Int   @id @default(autoincrement())
  id_user  Int
  user     User  @relation(fields: [id_user], references: [id])
  id_store Int
  store    Store @relation(fields: [id_store], references: [id])

  @@map("users_stores")
}

model ProductCategory {
  id          Int      @id @default(autoincrement())
  id_product  Int
  product     Product  @relation(fields: [id_product], references: [id])
  id_category Int
  category    Category @relation(fields: [id_category], references: [id])

  @@map("products_categories")
}

model Cart {
  id         Int      @id @default(autoincrement())
  id_product Int
  quantity   Int
  created_at DateTime @default(now())
  product    Product  @relation(fields: [id_product], references: [id])
  id_user    Int
  user       User     @relation(fields: [id_user], references: [id])

  @@map("cart")
}
